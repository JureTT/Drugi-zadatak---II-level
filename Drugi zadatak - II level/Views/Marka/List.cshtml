@using PoslovnaLogika.Service;
@using PoslovnaLogika.Models;
@using Drugi_zadatak___II_level.Models;
@using PagedList;
@using PagedList.Mvc;
@model IPagedList<PoslovnaLogika.Models.IVoziloMarka>
@{
    ViewBag.Title = "List";

    Numerer stranica = ViewBag.stranica;
    int str = stranica.Str;
    int[] stranice = new int[5] { 5, 10, 15, 20, 25 };
    int brSvi = stranica.BrSvihRedova;
    int brIsp = stranica.BrRedova;
    int brStr = (brSvi % brIsp != 0) ? (brSvi / brIsp) + 1 : brSvi / brIsp;
    int a = 0;      // kod za listanje stranica u oba smjera
    string sort = Request.QueryString["sortiraj"];
    //int str = Convert.ToInt16(Request.QueryString["strana"]);
    if (sort == "D_Id")
    {
        //str = (str == 0) ? 1 : str;
        a = brSvi + 1 - ((str - 1) * brIsp);
    }
    else
    {
        //if (str > 0)
        //{
        a = (str - 1) * brIsp;
        ////}
    }
}

<h2>Lista</h2>

<p>
    @Html.ActionLink("Kreiraj", "Create")
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="Message">@TempData["Message"]</span>

    @using (Html.BeginForm("List", "Marka", FormMethod.Get))
    {
        <label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Veličina popisa: </label>
        @Html.DropDownList("brIspisa",
                stranice.Select(item => new SelectListItem { Value = item.ToString(), Text = item.ToString(), Selected = item.ToString() == (Request.QueryString["brIspisa"]??"10")}),

                new
                {
                    onchange = "submit()"
                })
        <label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Naziv tvrtke: </label>
        @Html.TextBox("Naziv")
        <input type="submit" value="Traži" />
    }
</p>

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Redni broj", "List", new { sortiraj = ViewBag.sortId, kratica = Request.QueryString["kratica"], naziv = Request.QueryString["naziv"], strana = Request.QueryString["strana"], brIspisa = Request.QueryString["brIspisa"] })
        </th>
        <th>
            @Html.ActionLink("Naziv", "List", new { sortiraj = ViewBag.sortNaziv, kratica = Request.QueryString["kratica"], naziv = Request.QueryString["naziv"], strana = Request.QueryString["strana"], brIspisa = Request.QueryString["brIspisa"] })
        </th>
        <th>
            @Html.ActionLink("Kratica", "List", new { sortiraj = ViewBag.sortKratica, kratica = Request.QueryString["kratica"], naziv = Request.QueryString["naziv"], strana = Request.QueryString["strana"], brIspisa = Request.QueryString["brIspisa"] })
        </th>
        <th></th>
    </tr>
    @foreach (var item in Model)
     {
        <tr>
            <th>
                @if (sort == "D_Id")
                {
                    @(a = a - 1)
                }
                else
                {
                    @(a = a + 1)
                }
            </th>
            <td>
                @Html.DisplayFor(modelItem => item.Naziv)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Kratica)
            </td>
            <td>
                @Html.ActionLink("Uredi", "Edit", new { idMarke = item.Id }) |
                @Html.ActionLink("Detalji", "Details", new { idMarke = item.Id }) |
                @Html.ActionLink("Obriši", "Delete", new { idMarke = item.Id })
            </td>
        </tr>
    }
</table>

@*@if (brStr > 1)
{   
<ul class="pagination">
    @if (str > 1)
    {
        <li>@Html.ActionLink("«", "List", new { sortiraj = Request.QueryString["Sortiraj"], kratica = Request.QueryString["kratica"], naziv = Request.QueryString["naziv"], brIspisa = Request.QueryString["brIspisa"], strana = str - 1 })</li>
    }

    @for (int i = 1; i <= brStr; i++)
    {
        string aktivno = null;
        if (i == str)
        {
            aktivno = "class=active";
        }

        <li @aktivno>@Html.ActionLink(i.ToString(), "List", new { sortiraj = Request.QueryString["Sortiraj"], kratica = Request.QueryString["kratica"], naziv = Request.QueryString["naziv"], brIspisa = Request.QueryString["brIspisa"], strana = i, })</li>
    }

    @if (str < brStr)
    {
        <li>@Html.ActionLink("»", "List", new { sortiraj = Request.QueryString["Sortiraj"], kratica = Request.QueryString["kratica"], naziv = Request.QueryString["naziv"], brIspisa = Request.QueryString["brIspisa"], strana = str + 1 })</li>
    }
</ul>
}*@
@Html.PagedListPager(Model, strana => Url.Action("List", new { strana , brIspisa = Request.QueryString["brIspisa"], kratica = Request.QueryString["kratica"], naziv = Request.QueryString["naziv"], sortiraj = Request.QueryString["sortiraj"] }), new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
 
